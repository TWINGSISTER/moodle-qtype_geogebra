{"version":3,"file":"ggbq.min.js","sources":["../src/ggbq.js"],"sourcesContent":["\r\n\r\n/* eslint-disable */\r\n/* eslint-disable no-debugger */\r\n/*jslint devel: true */\r\n/*eslint linebreak-style:0 -- ['error', 'windows','unix']*/\r\n\r\n/**\r\n * Javascript Controller to embed GGBApplet\r\n *\r\n * StuDENT VIEW\r\n *\r\n * This class provides all the functionality for the new assign module.\r\n *\r\n * @author         Christoph Stadlbauer <christoph.stadlbauer@geogebra.org>\r\n * @copyright  (c) International GeoGebra Institute 2018\r\n * @license        http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\r\n// alert(\"hello ggbq\");\r\n //debugger; // eslint-disable-line\r\n        //debugcode();\r\n        function unpackStringified(s){\r\n\t\t var couples=s.split(\"%\");\r\n\t\t var results={};\r\n\t\t couples.forEach(function (couple, index) {\r\n\t\t  var twos=couple.split(\":\");results[twos[0]]=twos[1];\r\n  \t\t  });\r\n  \t\t  return results;\r\n  \t\t}\r\n        function packStringified(a){\r\n        //key:value%key:value FORMAT IS THIS!!! NO TRAILING %\r\n        // DECODED IN Liveviewgrid  locallib.php ggbTotal\r\n\t\t var results=\"\";\r\n\t\t for(var key in a) {\r\n  \t\t\tvar value = a[key];\r\n            results += key+\":\"+value+'%'; //Twingsister to deal with multidigit\r\n\t\t }\r\n          return results.replace(/\\%$/,\"\"); // possibly cut the last % works better with explode\r\n  \t\t}\r\n  \t\tfunction isInGGB(v,ggbApplet){return ggbApplet.isDefined(v);}\r\n  \t\tfunction fromGGB(v,ggbApplet){\r\n  \t\t\tvar res=ggbApplet.getValue(v);\r\n            if (ggbApplet.getObjectType(v)==\"boolean\"){res = (res ==  0 ?false:true);}\r\n   \t\t \treturn res; \r\n  \t\t }\r\n        function stringfy(responsevars,ggbApplet){\r\n        //debugcode();\r\n          var responsestring = '';\r\n          responsevars.forEach(function (responsevar){\r\n           if (ggbApplet.isDefined(responsevar)){ \r\n            var value = ggbApplet.getValue(responsevar);\r\n            if (ggbApplet.getObjectType(responsevar)==\"boolean\"){value = (value ==  0 ?\"false\":\"true\");}\r\n            responsestring += responsevar+\":\"+value+'%'; //Twingsister to deal with multidigit\r\n           }\r\n          });\r\n          return responsestring.replace(/\\%$/,\"\"); // possibly cut the last % works better with explode\r\n         }\r\n//        function loadinit(appletParametersID) {\r\n//        debugcode();\r\n//            var ggbDataset = document.getElementById(appletParametersID).dataset;\r\n    // Twingsister\r\n//        function loadinit(appletParametersID) {\r\n//            var ggbDataset = document.getElementById(appletParametersID).dataset;\r\n    // Twingsister\r\n//var GGBAppletstr;\r\n//            if (ggbDataset.isurlggb) {\r\n//            \tGGBAppletstr = ggbDataset.urlggb;\r\n//            } else { GGBAppletstr = 'https://www.geogebra.org/apps/deployggb.js';}\r\n\r\n   // }\r\n//define(['jquery','https://www.geogebra.org/apps/deployggb.js'], function ($, GGBApplet) {\r\ndefine(['jquery'], function ($) {\r\n     // Created by Christoph on 25.08.19.\r\n\r\n    const scalingContainers = {};\r\n    let resizeTimeout;\r\n     // Resizes the ggb scaling containers to make the ggb applet scale properly to fit into its container.\r\n    const resizeScalingContainer = () => {\r\n        clearTimeout(resizeTimeout);\r\n        resizeTimeout = setTimeout(\r\n            () => Object.values(scalingContainers).forEach((containerClass) => {\r\n                    // We need to use getElementsByClassName because colons are not allowed for jquery and Vanilla JS querySelector.\r\n                    const scalingContainer = document.getElementsByClassName(containerClass)[0];\r\n                    // We retrieve the formulation div container, because this gives us the correct width to adapt\r\n                    // the scaling container to.\r\n                    const formulationDivStyle = window.getComputedStyle(\r\n                        scalingContainer.querySelector('.qtext').parentElement.parentElement);\r\n                    scalingContainer.style.width = parseInt(formulationDivStyle.width)\r\n                        - parseInt(formulationDivStyle.paddingLeft) - parseInt(formulationDivStyle.paddingRight) + 'px';\r\n                }), 5000); //Twingsister mod was 250\r\n    };\r\n    return {\r\n        b64input: [],\r\n        ggbBase64: [],\r\n        xmlinput: [],\r\n        ggbxml: [],\r\n        currentvals: [],\r\n        answerinput: [],\r\n        responsevars: [],\r\n        exerciseresultinput: [],\r\n        qdiv: [],\r\n        //parameters: {}, //before not global\r\n        ggbDataset: [],\r\n        //confirmedpage: false, //Twingsister the user says sees a correct page\r\n        scratchit: false, //Twingsister turns init into a reload from file delete all what you have done \r\n        scratchMark: false, \r\n        filename:\"\",\r\n        //applet1,\r\n        checkLoading: function (appletParametersID){return;\r\n                \t if(!this.confirmedpage){\r\n                \t\tif(confirm(\"if something loaded (could be an empty cartesian plane) say ok\")){\r\n                \t\t\twindow.GGBQ.scratch(appletParametersID);\r\n                \t\t\tlocation.reload();return true;\r\n                \t\t\tif(confirm(\"if it looks as a correct question say ok\")){this.confirmedpage=true;}\r\n                \t\t\t else {if(confirm(\"if it is an empty cartesian plane, please say ok to reload\")){location.reload();return;}} \r\n                \t \t}\r\n                \t }\r\n                \t},\r\n        // Twingsister load from filename\r\n        scratchinit: function (appletParametersID) {\r\n            window.GGBQ = this;\r\n        \twindow.GGBQ.scratchit=true;\r\n        \twindow.GGBQ.init(appletParametersID); \r\n        },\r\n        scratch: function () {\r\n\t\t\tlet url = window.location.href;    \r\n\t\t\tif (url.indexOf('?') > -1){\r\n   \t\t\t\turl += '&scratch=1'\r\n\t\t\t} else {\r\n\t\t\t   url += '?scratch=1'\r\n\t\t\t}\r\n\t\t\t//window.location.href = url;\r\n\t\t\t//window.location.reload();\r\n\t\t\twindow.location.replace(url);\r\n\t\t\t// window.location.hash = 'varA=some_value;varB=some_value';\r\n        \t//window.GGBQ.init(appletParametersID); \r\n        },\r\n        init: function (appletParametersID) {\r\n        \t////this.scratchit=true;\r\n        \t//this.confirmedpage=false;//Twingsister\r\n            window.GGBQ = this;\r\n            debugcode();\r\n            var ggbDataset = document.getElementById(appletParametersID).dataset;\r\n\t\t\twindow.GGBQ.filename=ggbDataset.ggbturl;// the filename \r\n            var slot = ggbDataset.slot;\r\n            // Add current scaling container to the object store for being able to access it later on.\r\n            scalingContainers[slot] = ggbDataset.scalingcontainerclass;\r\n            //alert(\"no load\");\r\n\r\n            window.ggbAppletOnLoad = function (ggbAppletId) {\r\n                if (ggbAppletId != -1) {\r\n                    document.querySelector('article').onkeydown = this.checkEnter;\r\n                    var id = ggbAppletId.substring(9);\r\n                    var ggbApplet = window[ggbAppletId];\r\n                    var curvals = JSON.parse(window.GGBQ.currentvals[id]);\r\n                    for (var label in curvals) {\r\n                        ggbApplet.setValue(label, curvals[label]);\r\n                    }\r\n\r\n                    // Set the initial size of the scaling containers so GeoGebra applet scale a first time correctly after loading.\r\n                    resizeScalingContainer();\r\n                    // Unregister old event listeners in case we have multiple GeoGebra questions on one page.\r\n                    // We only need one for the whole page.\r\n                    window.removeEventListener('resize', resizeScalingContainer);\r\n                    window.addEventListener('resize', resizeScalingContainer);\r\n                    //window.GGBQ.checkLoading(appletParametersID);\r\n                    window.GGBQ.b64input[id].val(ggbApplet.getBase64());\r\n                    window.GGBQ.xmlinput[id].val(ggbApplet.getXML());\r\n \r\n                    //window.GGBQ.qdiv[id].style.visibility = 'visible';\r\n                    window.GGBQ.qdiv[id]= {style: {visibility : 'visible'}};\r\n                    if (window.GGBQ.answerinput[id].val() == '') {\r\n                        // Twingsister\r\n                        window.GGBQ.answerinput[id].val(stringfy(window.GGBQ.responsevars[id],ggbApplet));\r\n                        // Twingsister\r\n                    \t//alert(\"response one\");\r\n                //alert(\"gogod\");\r\n             \t//ggbApplet.setWidth(100);\r\n             \t//ggbApplet.setPerspective(\"GD\");\r\n                    }\r\n\t\t\t\tif(window.GGBQ.scratchMark){\r\n\t\t\t\t\tggbApplet.evalCommand('Text(\"QUIZ RELOADED\")');\r\n\t\t\t\t\twindow.GGBQ.scratchMark=false;\r\n                 }\r\n                } else {alert(\"Applet not found, please reload this page\");location.reload();}\r\n            };\r\n            \r\n            // jquery doesn't handle the colon : but later we expect a jquery optject, so ...\r\n            this.b64input[slot] = $(document.getElementById(ggbDataset.b64input));\r\n            this.ggbBase64[slot] = this.b64input[slot].val();\r\n\r\n            this.xmlinput[slot] = $(document.getElementById(ggbDataset.xmlinput));\r\n            this.ggbxml[slot] = this.xmlinput[slot].val();\r\n            this.qdiv[slot] = $(\"#q\" + (slot) + \" .qtext\")[0];\r\n\r\n            \r\n            var parameters = JSON.parse(ggbDataset.parameters);\r\n            //parameters = JSON.parse(ggbDataset.parameters);\r\n            if (this.ggbBase64[slot] != '') {\r\n                parameters.ggbBase64 = this.ggbBase64[slot];\r\n            }\r\n\t\t\tif(window.GGBQ.scratchit){\r\n\t\t\t\tvar httpurl = window.GGBQ.filename;\r\n                if(httpurl.startsWith('http')){\r\n\t\t\t\t\tdelete parameters.ggbBase64;\r\n\t\t\t\t\tparameters.filename=httpurl\r\n\t\t\t\t\twindow.GGBQ.scratchMark=true;\r\n                 }else{alert(\"Reloading from Geogebra Tube not implemented\")}\r\n\t\t\t}\r\n            // Check if seed have been manually set. The default would be \"no\"\r\n            //alert(\"entering the seed\");\r\n            \t//debugcode();\r\n            if (!ggbDataset.seeditornot || ggbDataset.seeditornot === '0') {\r\n            \tvar dice=Math.floor((Math.random() * 1000) + 1);\r\n            \t//alert(\"random copy with \"+dice.toString());\r\n            \t//debugcode();\r\n                parameters.randomSeed = dice ;\r\n            } else {\r\n                parameters.randomSeed = ggbDataset.seed;\r\n            } \r\n            //alert(\"Calling with random \"+parameters.randomSeed.toString());\r\n            if (!ggbDataset.forcedimensions || ggbDataset.forcedimensions === '0') {\r\n                parameters.scaleContainerClass = scalingContainers[slot];\r\n                parameters.autoHeight = true;\r\n            } else {\r\n                // Width and height are specified in this case, so we use the given fixed width and height settings\r\n                // of the plugin instance. Form validation of the settings asserts that both width and height are being set.\r\n                parameters.width = ggbDataset.width;\r\n                parameters.height = ggbDataset.height;\r\n                // We need to use getElementsByClassName because colons are not allowed for jquery and Vanilla JS querySelector.\r\n                const scalingContainer = document.getElementsByClassName(scalingContainers[slot])[0];\r\n                // We should always find this container, just check to be extra safe.\r\n                if (scalingContainer) {\r\n                    // Width of the scaling container is being set after the applet has been loaded. So no need to specify it here.\r\n                    scalingContainer.style.overflowX = 'auto';\r\n                    scalingContainer.style.overflowY = 'hidden';\r\n                }\r\n            }\r\n            // parameters.currentvals = JSON.parse(ggbDataset.vars);\r\n            this.ggbDatasetVars = JSON.parse(ggbDataset.vars);\r\n            parameters.language = ggbDataset.lang;\r\n            parameters.moodle = \"takingQuiz\";\r\n            delete parameters.material_id;\r\n\r\n            parameters.id = 'ggbApplet' + slot;\r\n\r\n            var views = JSON.parse(ggbDataset.views);\r\n            // Check if GGBApplet have been manually set.\r\n        debugcode(); //\r\n            \tvar GGBAppletname ;\r\n            \tvar codebase ;\r\n\r\n            if (!ggbDataset.isurlggb||ggbDataset.isurlggb === \"0\") {\r\n             GGBAppletname = 'https://www.geogebra.org/apps/deployggb.js';\r\n             codebase=\"\";\r\n            } else {\r\n                var parts=ggbDataset.urlggb.split(\",\");\r\n            \tvar root=parts[0];\r\n            \tvar appl=parts[1];\r\n            \tvar base=parts[2];\r\n            \tGGBAppletname = root+appl ;\r\n            \tcodebase = root+base;\r\n            }\r\n              //require.config({paths: {gb: GGBAppletname.slice(0,-3)}});\r\n              //require([\"gb\"], function(gb) \r\n              //import GGBApplet from GGBAppletname;\r\n\r\n            require([GGBAppletname],function (App){//);\r\n            \tvar applet1 ;\r\n                //applet1 = new App(parameters, views, ggbDataset.html5NoWebSimple);\r\n                if(!parameters.showToolBar){\r\n                 parameters.showToolBar=true; \r\n                 parameters.customToolBar=\"40,0,1,41,42,50,38\";//,6\";\r\n                }\r\n                // parameters.enableUndoRedo=false; //user controlled\r\n                //parameters.showResetIcon=false;// user defined\r\n                parameters.preventFocus=true;// get focus upon start\r\n                parameters.allowStyleBar=false;// style bar controls too much \r\n                parameters.transparentGraphics=false;// graphics and graphics 2 are transparent\r\n                parameters.playButton=false; //true not working?\r\n                parameters.autoHeight=false; // allow height computed automatically\r\n                parameters.allowUpscale=true; // let GGB upscale Applet\r\n                parameters.showFullscreenButton=true; // let GGB upscale Applet\r\n                applet1 = new App(parameters,ggbDataset.html5nowebsimple);\r\n            \tdebugcode();\r\n\t\t\t\t//window.onload = function() \r\n\t\t\t\t//window.addEventListener(\"load\", function() \r\n                if (!(codebase===\"\")){applet1.setHTML5Codebase(codebase)};\r\n                //alert(\"foo\");\r\n            \tapplet1.inject(ggbDataset.div, \"preferHTML5\");\r\n\t\t\t});\r\n            // Check if seed have been manually set. The default would be \"no\"\r\n\t\t\t    //})\r\n\t\t\t    //}\r\n            //\tGGBApplet=\r\n            //       define([GGBAppletname], function (GGBobj) {return GGBobj;});\r\n            //alert(\"applet creation\");debugger;\r\n            //var applet1 = new GGBApplet(parameters, views, ggbDataset.html5NoWebSimple);\r\n            //NO applet1.setHTML5Codebase(\"https://cdn.geogebra.org/apps/5.0.541.0/web3d\");\r\n\r\n            $('#responseform').on('submit', this.preGetBase64andCheck);\r\n\r\n            // Do wep really need this $(document.getElementById(ggbDataset.div)).on('mouseleave', this.getBase64andCheck);\r\n            $(document.getElementById(ggbDataset.div)).on('mouseleave', this.getBase64andCheck);\r\n\r\n            this.currentvals[slot] = ggbDataset.vars;\r\n            this.answerinput[slot] = $(document.getElementById(ggbDataset.answerinput));\r\n            this.exerciseresultinput[slot] = $(document.getElementById(ggbDataset.exerciseresultinput));\r\n            this.responsevars[slot] = JSON.parse(ggbDataset.responsevars);\r\n\t\t\t//window.GGBQ.checkLoading(appletParametersID);\r\n        },\r\n        checkEnter: function(e) {\r\n            e = e || event;\r\n            var txtArea = /textarea/i.test((e.target || e.srcElement).tagName);\r\n            return txtArea || (e.keyCode || e.which || e.charCode || 0) !== 13;\r\n        },\r\n    // Twingsister\r\n    // takes an an array o strings that are GGB variable names either numeric text or boolean and\r\n    // returns a percent % separated string of the values. If no value is present the variable is skipped\r\n\r\n\r\n\r\n        //confirmedpage=false,``\r\n        preGetBase64andCheck: function() {this.getBase64andCheck();},\r\n        \r\n        getBase64andCheck: function() {\r\n        debugcode();\r\n        if(!confirm(\"Do you want to save your work?\")){return;}\r\n            for (var i = 0; i < window.GGBQ.answerinput.length; i++) {\r\n                var ggbApplet = window['ggbApplet' + i];\r\n                if (typeof ggbApplet !== \"undefined\" && ggbApplet.hasOwnProperty(\"getBase64\")) {\r\n                \t//window.GGBQ.checkLoading(ggbApplet);\r\n                \t//if(!this.confirmedpage&&!confirm(\"Is the applet loaded correctly?\")){location.reload();return;}else{this.confirmedpage=true;}\r\n                    window.GGBQ.b64input[i].val(ggbApplet.getBase64());\r\n                    window.GGBQ.xmlinput[i].val(ggbApplet.getXML());\r\n\r\n                    // Workaround, to set all randomized variables.\r\n                    for (const [key, value] of Object.entries(window.GGBQ.ggbDatasetVars)) {\r\n                        ggbApplet.evalCommand(`${key}=${value}`);\r\n                    }\r\n\r\n                    //var responsestring = '';\r\n                    //for (var j = 0; j < window.GGBQ.responsevars[i].length; j++) [\r\n                        //if (ggbApplet.isDefined(window.GGBQ.responsevars[i][j])) [\r\n                        // Twingsister\r\n                        var resp=stringfy(window.GGBQ.responsevars[i],ggbApplet);\r\n\t\t \t\t\t\t//special conditions treatement\r\n\t\t \t\t\t\t// there are both  juste and grade juste is true grade is less than one then take it to one\r\n\t\t \t\t\t\tvar outputs = unpackStringified(resp);\r\n\t\t \t\t\t\tvar justeison=(((\"juste\" in outputs) && outputs[\"juste\"]===\"true\")||(isInGGB('juste',ggbApplet)&&fromGGB('juste',ggbApplet)));\r\n\t\t \t\t\t\tif(justeison){\r\n        \t\t\t\t\tif( (\"grade\" in outputs)&&(Number(outputs[\"grade\"])<1)){\r\n        \t\t\t\t\t outputs[\"grade\"]=\"1.0\";\r\n        \t\t\t\t\t alert(\"maximum mark assigned\");\r\n        \t\t\t\t\t}\r\n        \t\t\t\t}\r\n        \t\t\t\t// check loading failed to work code below commented out\r\n        \t\t\t\t// Some alert added to help the user to ask for a reload\r\n        \t\t\t\t// if the global variable RT_R_DBLCHK is declared check if the ggb finish loading if not give full mark\r\n        \t\t\t\t//if(window.hasOwnProperty('RT_R_DBLCHK')&&\r\n        \t\t\t\t//\t(!window.hasOwnProperty('RT_R_Loaded')||!RT_R_Loaded)){\r\n        \t\t\t\t//\toutputs[\"grade\"]=\"1.0\";\r\n        \t\t\t\t//\talert(\"maximum mark assigned\");\r\n        \t\t\t\t//}\r\n        \t\t\t\tresp=packStringified(outputs);\r\n                        window.GGBQ.answerinput[i].val(resp);\r\n                        // Twingsister\r\n                        //    responsestring += ggbApplet.getValue(window.GGBQ.responsevars[i][j])+'%'; // Twingsister:to add multi digit\r\n                        //] else [\r\n                        //    responsestring += 0;\r\n                        //]\r\n                    //]\r\n                    //window.GGBQ.answerinput[i].val(responsestring);\r\n                    //alert(\"response\");\r\n                }else{if(typeof ggbApplet !== \"undefined\"){alert(\"quiz not loaded\");location.reload()}}\r\n            }\r\n        },\r\n\r\n    };\r\n});\r\n//init(appletParametersID);\r\n//}\r\n"],"names":["unpackStringified","s","couples","split","results","forEach","couple","index","twos","packStringified","a","key","replace","isInGGB","v","ggbApplet","isDefined","fromGGB","res","getValue","getObjectType","stringfy","responsevars","responsestring","responsevar","value","define","$","resizeTimeout","scalingContainers","resizeScalingContainer","clearTimeout","setTimeout","Object","values","containerClass","scalingContainer","document","getElementsByClassName","formulationDivStyle","window","getComputedStyle","querySelector","parentElement","style","width","parseInt","paddingLeft","paddingRight","b64input","ggbBase64","xmlinput","ggbxml","currentvals","answerinput","exerciseresultinput","qdiv","ggbDataset","scratchit","scratchMark","filename","checkLoading","appletParametersID","scratchinit","GGBQ","this","init","scratch","url","location","href","indexOf","debugcode","getElementById","dataset","ggbturl","slot","scalingcontainerclass","ggbAppletOnLoad","ggbAppletId","onkeydown","checkEnter","id","substring","curvals","JSON","parse","label","setValue","removeEventListener","addEventListener","val","getBase64","getXML","visibility","evalCommand","alert","reload","parameters","httpurl","startsWith","seeditornot","randomSeed","seed","dice","Math","floor","random","forcedimensions","height","overflowX","overflowY","scaleContainerClass","autoHeight","ggbDatasetVars","vars","language","lang","moodle","material_id","GGBAppletname","codebase","views","isurlggb","parts","urlggb","root","appl","base","require","App","applet1","showToolBar","customToolBar","preventFocus","allowStyleBar","transparentGraphics","playButton","allowUpscale","showFullscreenButton","html5nowebsimple","setHTML5Codebase","inject","div","on","preGetBase64andCheck","getBase64andCheck","e","event","test","target","srcElement","tagName","keyCode","which","charCode","confirm","i","length","hasOwnProperty","entries","resp","outputs","Number"],"mappings":"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"}