function _slicedToArray(arr,i){return function(arr){if(Array.isArray(arr))return arr}
/**
 * Javascript Controller to embed GGBApplet
 *
 * StuDENT VIEW
 *
 * This class provides all the functionality for the new assign module.
 *
 * @author         Christoph Stadlbauer <christoph.stadlbauer@geogebra.org>
 * @copyright  (c) International GeoGebra Institute 2018
 * @license        http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */(arr)||function(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function unpackStringified(s){var couples=s.split("%"),results={};return couples.forEach((function(couple,index){var twos=couple.split(":");results[twos[0]]=twos[1]})),results}function packStringified(a){var results="";for(var key in a){results+=key+":"+a[key]+"%"}return results.replace(/\%$/,"")}function isInGGB(v,ggbApplet){return ggbApplet.isDefined(v)}function fromGGB(v,ggbApplet){var res=ggbApplet.getValue(v);return"boolean"==ggbApplet.getObjectType(v)&&(res=0!=res),res}function stringfy(responsevars,ggbApplet){var responsestring="";return responsevars.forEach((function(responsevar){if(ggbApplet.isDefined(responsevar)){var value=ggbApplet.getValue(responsevar);"boolean"==ggbApplet.getObjectType(responsevar)&&(value=0==value?"false":"true"),responsestring+=responsevar+":"+value+"%"}})),responsestring.replace(/\%$/,"")}define("qtype_geogebra/ggbq",["jquery"],(function($){var resizeTimeout,scalingContainers={},resizeScalingContainer=function(){clearTimeout(resizeTimeout),resizeTimeout=setTimeout((function(){return Object.values(scalingContainers).forEach((function(containerClass){var scalingContainer=document.getElementsByClassName(containerClass)[0],formulationDivStyle=window.getComputedStyle(scalingContainer.querySelector(".qtext").parentElement.parentElement);scalingContainer.style.width=parseInt(formulationDivStyle.width)-parseInt(formulationDivStyle.paddingLeft)-parseInt(formulationDivStyle.paddingRight)+"px"}))}),5e3)};return{b64input:[],ggbBase64:[],xmlinput:[],ggbxml:[],currentvals:[],answerinput:[],responsevars:[],exerciseresultinput:[],qdiv:[],ggbDataset:[],scratchit:!1,scratchrandomizeit:!1,scratchMark:!1,filename:"",checkLoading:function(appletParametersID){},scratchrandomize:function(appletParametersID){window.GGBQ=this,window.GGBQ.scratchrandomizeit=!0,window.GGBQ.init(appletParametersID)},scratchinit:function(appletParametersID){window.GGBQ=this,window.GGBQ.scratchit=!0,window.GGBQ.init(appletParametersID)},scratch:function(reloadggb){var url=window.location.href;switch(url=(url=url.replaceAll(/&scratch=./g,"")).replaceAll(/\?scratch=./g,""),reloadggb.trim()){case"none":case"ncon":break;case"rand":confirm("This will reload this exercise with different numbers. All previous work on this exercise will be lost.")&&(url.indexOf("?")>-1?url+="&scratch=2":url+="?scratch=2",window.location.replace(url));break;case"redo":confirm("This will reload this exercise with same numbers. All previous work on this exercise will be lost.")&&(url.indexOf("?")>-1?url+="&scratch=1":url+="?scratch=1",window.location.replace(url))}},init:function(appletParametersID){window.GGBQ=this,debugcode();var ggbDataset=document.getElementById(appletParametersID).dataset;ggbDataset.reloadggb;urlprefixlist=(urlprefixlist=ggbDataset.urlprefixlist).split(","),window.GGBQ.filename=function(str,dic){for(var result,alts=dic.length,i=0;i<alts;i++)if(result=str.replace(dic[i],dic[Date.now()%(alts-1)]),str!=result)return result;return str}(ggbDataset.ggbturl,urlprefixlist);var slot=ggbDataset.slot;scalingContainers[slot]=ggbDataset.scalingcontainerclass,window.ggbAppletOnLoad=function(ggbAppletId){if(-1!=ggbAppletId){document.querySelector("article").onkeydown=this.checkEnter;var id=ggbAppletId.substring(9),ggbApplet=window[ggbAppletId],curvals=JSON.parse(window.GGBQ.currentvals[id]);for(var label in curvals)ggbApplet.setValue(label,curvals[label]);resizeScalingContainer(),window.removeEventListener("resize",resizeScalingContainer),window.addEventListener("resize",resizeScalingContainer),window.GGBQ.b64input[id].val(ggbApplet.getBase64()),window.GGBQ.xmlinput[id].val(ggbApplet.getXML()),window.GGBQ.qdiv[id]={style:{visibility:"visible"}},""==window.GGBQ.answerinput[id].val()&&window.GGBQ.answerinput[id].val(stringfy(window.GGBQ.responsevars[id],ggbApplet)),window.GGBQ.scratchMark&&(ggbApplet.evalCommand('mark=Text("QUIZ RELOADED")'),ggbApplet.setFixed("mark",!0,!1),window.GGBQ.scratchMark=!1)}else alert("Applet not found, please reload this page"),location.reload()},this.b64input[slot]=$(document.getElementById(ggbDataset.b64input)),this.ggbBase64[slot]=this.b64input[slot].val(),this.xmlinput[slot]=$(document.getElementById(ggbDataset.xmlinput)),this.ggbxml[slot]=this.xmlinput[slot].val(),this.qdiv[slot]=$("#q"+slot+" .qtext")[0];var httpurl,parameters=JSON.parse(ggbDataset.parameters);(""!=this.ggbBase64[slot]&&(parameters.ggbBase64=this.ggbBase64[slot]),window.GGBQ.scratchit)&&((httpurl=window.GGBQ.filename).startsWith("http")?(delete parameters.ggbBase64,parameters.filename=httpurl,window.GGBQ.scratchMark=!0):alert("Reloading from Geogebra Tube not implemented"));if(ggbDataset.seeditornot&&"0"!==ggbDataset.seeditornot)parameters.randomSeed=ggbDataset.seed;else{var dice=Math.floor(1e3*Math.random()+1);parameters.randomSeed=dice}window.GGBQ.scratchrandomizeit&&(window.GGBQ.scratchMark=!0,window.GGBQ.scratchrandomizeit=!1,parameters.randomSeed=Math.floor(1e3*Math.random()+1),(httpurl=window.GGBQ.filename).startsWith("http")&&(delete parameters.ggbBase64,parameters.filename=httpurl));if(ggbDataset.forcedimensions&&"0"!==ggbDataset.forcedimensions){parameters.width=ggbDataset.width,parameters.height=ggbDataset.height;var scalingContainer=document.getElementsByClassName(scalingContainers[slot])[0];scalingContainer&&(scalingContainer.style.overflowX="auto",scalingContainer.style.overflowY="hidden")}else parameters.scaleContainerClass=scalingContainers[slot],parameters.autoHeight=!0;this.ggbDatasetVars=JSON.parse(ggbDataset.vars),parameters.language=ggbDataset.lang,parameters.moodle="takingQuiz",delete parameters.material_id,parameters.id="ggbApplet"+slot;var GGBAppletname,codebase;JSON.parse(ggbDataset.views);debugcode();var urlprefixlist=ggbDataset.urlprefixlist;if(ggbDataset.isurlggb&&"0"!==ggbDataset.isurlggb){var parts=ggbDataset.urlggb.split(","),root=parts[0],appl=parts[1],base=parts[2];GGBAppletname=root+appl,codebase=root+base}else GGBAppletname="https://www.geogebra.org/apps/deployggb.js",codebase="";require([GGBAppletname],(function(App){var applet1;parameters.showToolBar||(parameters.showToolBar=!0,parameters.customToolBar="40,0,1,41,42,50,38"),parameters.preventFocus=!0,parameters.allowStyleBar=!1,parameters.transparentGraphics=!1,parameters.playButton=!1,parameters.autoHeight=!1,parameters.allowUpscale=!0,parameters.showFullscreenButton=!0,applet1=new App(parameters,ggbDataset.html5nowebsimple),debugcode(),""!==codebase&&applet1.setHTML5Codebase(codebase),applet1.inject(ggbDataset.div,"preferHTML5")})),$("#responseform").on("submit",this.preGetBase64andCheck),$(document.getElementById(ggbDataset.div)).on("mouseleave",this.getBase64andCheck),this.currentvals[slot]=ggbDataset.vars,this.answerinput[slot]=$(document.getElementById(ggbDataset.answerinput)),this.exerciseresultinput[slot]=$(document.getElementById(ggbDataset.exerciseresultinput)),this.responsevars[slot]=JSON.parse(ggbDataset.responsevars)},checkEnter:function(e){return e=e||event,/textarea/i.test((e.target||e.srcElement).tagName)||13!==(e.keyCode||e.which||e.charCode||0)},preGetBase64andCheck:function(){this.getBase64andCheck()},getBase64andCheck:function(){if(debugcode(),confirm("Do you want to save your work?"))for(var i=0;i<window.GGBQ.answerinput.length;i++){var ggbApplet=window["ggbApplet"+i];if(void 0!==ggbApplet&&ggbApplet.hasOwnProperty("getBase64")){window.GGBQ.b64input[i].val(ggbApplet.getBase64()),window.GGBQ.xmlinput[i].val(ggbApplet.getXML());for(var _i=0,_Object$entries=Object.entries(window.GGBQ.ggbDatasetVars);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];ggbApplet.evalCommand("".concat(key,"=").concat(value))}var resp=stringfy(window.GGBQ.responsevars[i],ggbApplet),outputs=unpackStringified(resp);("juste"in outputs&&"true"===outputs.juste||isInGGB("juste",ggbApplet)&&fromGGB("juste",ggbApplet))&&"grade"in outputs&&Number(outputs.grade)<1&&(outputs.grade="1.0",alert("maximum mark assigned")),resp=packStringified(outputs),window.GGBQ.answerinput[i].val(resp)}else void 0!==ggbApplet&&(alert("quiz not loaded"),location.reload())}}}}));

//# sourceMappingURL=ggbq.min.js.map